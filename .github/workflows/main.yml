name: Build & Analyze CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  sonar:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run SonarQube analysis
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_PROJECT_KEY: ${{SONAR_PROJECT_KEY}}

  build:
    runs-on: ubuntu-latest
    needs: sonar

    steps:
    - uses: actions/checkout@v4

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_PASS }}" | docker login -u "${{ secrets.DOCKERHUB_USER }}" --password-stdin

    - name: Build Docker image
      run: docker image build -t ${{ secrets.DOCKERHUB_USER }}/weather_forecast:v1 .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKERHUB_USER }}/weather_forecast:v1

  # Uncomment below lines if you fix SSH issue and want to deploy to WSL
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
    
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4

  #   - name: Create .ssh directory
  #     run: mkdir -p ~/.ssh
      
  #   - name: Set up SSH key
  #     run: |
  #       echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
  #       chmod 600 ~/.ssh/id_rsa

  #   - name: Debug SSH Connection
  #     run: |
  #       ssh -i ~/.ssh/id_rsa -vvv user@${{ secrets.WSL_IP }} || true

  #   - name: Deploy to WSL
  #     run: |
  #       ssh -i ~/.ssh/id_rsa user@${{ secrets.WSL_IP }} << 'EOF'
  #         docker pull ${{ secrets.DOCKERHUB_USER }}/weather_forecast:v1
  #         docker stop weather_forecast || true
  #         docker rm weather_forecast || true
  #         docker run -d --name weather_forecast --restart always ${{ secrets.DOCKERHUB_USER }}/weather_forecast:v1
  #       EOF
